<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="diglex.dsl.typesystem.CheckDictionaryConsistency_NonTypesystemRule" file="CheckDictionaryConsistency_NonTypesystemRule.java">
    <classNode dependClassName="diglex.dsl.utils.CheckDependencies" />
    <classNode dependClassName="diglex.dsl.utils.IdUtil" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.backports.LinkedList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="diglex.dsl.typesystem.CheckMatchCaseConditionItemsAreDefined_NonTypesystemRule" file="CheckMatchCaseConditionItemsAreDefined_NonTypesystemRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.intentions.BaseIntentionProvider" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.IErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.NodeErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="diglex.dsl.typesystem.CheckMatchCaseConditionItemsNotEmpty_NonTypesystemRule" file="CheckMatchCaseConditionItemsNotEmpty_NonTypesystemRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.intentions.BaseIntentionProvider" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.IErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.NodeErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="diglex.dsl.typesystem.CheckMatchCaseItemsAreDefined_NonTypesystemRule" file="CheckMatchCaseItemsAreDefined_NonTypesystemRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.intentions.BaseIntentionProvider" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.IErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.NodeErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="diglex.dsl.typesystem.CheckMatchCaseItemsNotEmpty_NonTypesystemRule" file="CheckMatchCaseItemsNotEmpty_NonTypesystemRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.intentions.BaseIntentionProvider" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.IErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.NodeErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="diglex.dsl.typesystem.CheckTemplateNameUniqueness_NonTypesystemRule" file="CheckTemplateNameUniqueness_NonTypesystemRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.intentions.BaseIntentionProvider" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.IErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.NodeErrorTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="diglex.dsl.typesystem.TypesystemDescriptor" file="TypesystemDescriptor.java">
    <classNode dependClassName="diglex.dsl.typesystem.CheckDictionaryConsistency_NonTypesystemRule" />
    <classNode dependClassName="diglex.dsl.typesystem.CheckMatchCaseConditionItemsAreDefined_NonTypesystemRule" />
    <classNode dependClassName="diglex.dsl.typesystem.CheckMatchCaseConditionItemsNotEmpty_NonTypesystemRule" />
    <classNode dependClassName="diglex.dsl.typesystem.CheckMatchCaseItemsAreDefined_NonTypesystemRule" />
    <classNode dependClassName="diglex.dsl.typesystem.CheckMatchCaseItemsNotEmpty_NonTypesystemRule" />
    <classNode dependClassName="diglex.dsl.typesystem.CheckTemplateNameUniqueness_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.BaseHelginsDescriptor" />
  </dependency>
</dependenciesRoot>

