package diglex.dsl.utils;

/*Generated by MPS */

import jetbrains.mps.smodel.SModel;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class NameUniqunessUtil {
  public NameUniqunessUtil() {
  }

  public static boolean isNameUnique(SModel model, final String name) {
    int sum = 0;

    sum += ListSequence.fromList(SModelOperations.getNodes(model, "diglex.dsl.structure.Template")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name") == name;
      }
    }).count();
    sum += ListSequence.fromList(SModelOperations.getNodes(model, "diglex.dsl.structure.Dictionary")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name") == name;
      }
    }).count();
    sum += ListSequence.fromList(SModelOperations.getNodes(model, "diglex.dsl.structure.LexemClassification")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name") == name;
      }
    }).count();
    sum += ListSequence.fromList(SModelOperations.getNodes(model, "diglex.dsl.structure.SearchSettings")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name") == name;
      }
    }).count();

    if (sum > 1) {
      return false;
    }

    return true;
  }
}
