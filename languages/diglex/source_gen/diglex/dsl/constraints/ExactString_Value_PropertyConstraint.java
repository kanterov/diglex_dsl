package diglex.dsl.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyValidator;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import diglex.dsl.utils.ExactStringBuilder;

public class ExactString_Value_PropertyConstraint implements IModelConstraints, INodePropertyValidator {
  public ExactString_Value_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyValidator("diglex.dsl.structure.ExactString", "Value", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyValidator("diglex.dsl.structure.ExactString", "Value");
  }

  public boolean checkPropertyValue(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
    if (SLinkOperations.getTarget(node, "lexemType", false) == null || (SPropertyOperations.getString(propertyValue)) == null || (SPropertyOperations.getString(propertyValue)).length() == 0) {
      return true;
    }

    return ExactStringBuilder.CheckExactString((SPropertyOperations.getString(propertyValue)), SLinkOperations.getTarget(node, "lexemType", false));
  }
}
