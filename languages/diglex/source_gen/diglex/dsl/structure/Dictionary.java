package diglex.dsl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Dictionary extends BaseConcept implements INamedConcept {
  public static final String concept = "diglex.dsl.structure.Dictionary";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String DICTIONARY_TEMPLATE = "dictionaryTemplate";
  public static final String DICTIONARY_CLASS = "dictionaryClass";

  public Dictionary(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(Dictionary.NAME);
  }

  public void setName(String value) {
    this.setProperty(Dictionary.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(Dictionary.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(Dictionary.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(Dictionary.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(Dictionary.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(Dictionary.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(Dictionary.VIRTUAL_PACKAGE, value);
  }

  public int getDictionaryTemplatesCount() {
    return this.getChildCount(Dictionary.DICTIONARY_TEMPLATE);
  }

  public Iterator<DictionaryTemplate> dictionaryTemplates() {
    return this.children(DictionaryTemplate.class, Dictionary.DICTIONARY_TEMPLATE);
  }

  public List<DictionaryTemplate> getDictionaryTemplates() {
    return this.getChildren(DictionaryTemplate.class, Dictionary.DICTIONARY_TEMPLATE);
  }

  public void addDictionaryTemplate(DictionaryTemplate node) {
    this.addChild(Dictionary.DICTIONARY_TEMPLATE, node);
  }

  public void insertDictionaryTemplate(DictionaryTemplate prev, DictionaryTemplate node) {
    this.insertChild(prev, Dictionary.DICTIONARY_TEMPLATE, node);
  }

  public int getDictionaryClassesCount() {
    return this.getChildCount(Dictionary.DICTIONARY_CLASS);
  }

  public Iterator<DictionaryClass> dictionaryClasses() {
    return this.children(DictionaryClass.class, Dictionary.DICTIONARY_CLASS);
  }

  public List<DictionaryClass> getDictionaryClasses() {
    return this.getChildren(DictionaryClass.class, Dictionary.DICTIONARY_CLASS);
  }

  public void addDictionaryClass(DictionaryClass node) {
    this.addChild(Dictionary.DICTIONARY_CLASS, node);
  }

  public void insertDictionaryClass(DictionaryClass prev, DictionaryClass node) {
    this.insertChild(prev, Dictionary.DICTIONARY_CLASS, node);
  }

  public static Dictionary newInstance(SModel sm, boolean init) {
    return (Dictionary) SModelUtil_new.instantiateConceptDeclaration("diglex.dsl.structure.Dictionary", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Dictionary newInstance(SModel sm) {
    return Dictionary.newInstance(sm, false);
  }
}
