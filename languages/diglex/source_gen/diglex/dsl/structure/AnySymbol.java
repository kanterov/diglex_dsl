package diglex.dsl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AnySymbol extends BaseConcept implements IBlockItem {
  public static final String concept = "diglex.dsl.structure.AnySymbol";
  public static final String TIMES_MAXIMUM = "timesMaximum";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String TIMES_MINIMUM = "timesMinimum";
  public static final String TIMES_MAXIMUM_INTEGER = "timesMaximumInteger";
  public static final String LEXEM_TYPE = "lexemType";

  public AnySymbol(SNode node) {
    super(node);
  }

  public String getTimesMaximum() {
    return this.getProperty(AnySymbol.TIMES_MAXIMUM);
  }

  public void setTimesMaximum(String value) {
    this.setProperty(AnySymbol.TIMES_MAXIMUM, value);
  }

  public String getName() {
    return this.getProperty(AnySymbol.NAME);
  }

  public void setName(String value) {
    this.setProperty(AnySymbol.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(AnySymbol.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(AnySymbol.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(AnySymbol.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(AnySymbol.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(AnySymbol.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(AnySymbol.VIRTUAL_PACKAGE, value);
  }

  public int getTimesMinimum() {
    return this.getIntegerProperty(AnySymbol.TIMES_MINIMUM);
  }

  public void setTimesMinimum(int value) {
    this.setIntegerProperty(AnySymbol.TIMES_MINIMUM, value);
  }

  public int getTimesMaximumInteger() {
    return this.getIntegerProperty(AnySymbol.TIMES_MAXIMUM_INTEGER);
  }

  public void setTimesMaximumInteger(int value) {
    this.setIntegerProperty(AnySymbol.TIMES_MAXIMUM_INTEGER, value);
  }

  public LexemType getLexemType() {
    return (LexemType) this.getReferent(LexemType.class, AnySymbol.LEXEM_TYPE);
  }

  public void setLexemType(LexemType node) {
    super.setReferent(AnySymbol.LEXEM_TYPE, node);
  }

  public static AnySymbol newInstance(SModel sm, boolean init) {
    return (AnySymbol) SModelUtil_new.instantiateConceptDeclaration("diglex.dsl.structure.AnySymbol", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AnySymbol newInstance(SModel sm) {
    return AnySymbol.newInstance(sm, false);
  }
}
