package diglex.dsl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TemplateReference extends BaseConcept implements IMatchCaseItem {
  public static final String concept = "diglex.dsl.structure.TemplateReference";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String TEMPLATE_REFERENCE = "TemplateReference";
  public static final String REPEAT = "Repeat";

  public TemplateReference(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(TemplateReference.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(TemplateReference.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(TemplateReference.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(TemplateReference.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(TemplateReference.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(TemplateReference.VIRTUAL_PACKAGE, value);
  }

  public Template getTemplateReference() {
    return (Template) this.getReferent(Template.class, TemplateReference.TEMPLATE_REFERENCE);
  }

  public void setTemplateReference(Template node) {
    super.setReferent(TemplateReference.TEMPLATE_REFERENCE, node);
  }

  public RepeatTimes getRepeat() {
    return (RepeatTimes) this.getChild(RepeatTimes.class, TemplateReference.REPEAT);
  }

  public void setRepeat(RepeatTimes node) {
    super.setChild(TemplateReference.REPEAT, node);
  }

  public static TemplateReference newInstance(SModel sm, boolean init) {
    return (TemplateReference) SModelUtil_new.instantiateConceptDeclaration("diglex.dsl.structure.TemplateReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TemplateReference newInstance(SModel sm) {
    return TemplateReference.newInstance(sm, false);
  }
}
