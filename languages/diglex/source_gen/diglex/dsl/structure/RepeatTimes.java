package diglex.dsl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RepeatTimes extends BaseConcept {
  public static final String concept = "diglex.dsl.structure.RepeatTimes";
  public static final String MAXIMUM = "maximum";
  public static final String MINIMUM = "minimum";
  public static final String MAXIMUM_INTEGER = "maximumInteger";

  public RepeatTimes(SNode node) {
    super(node);
  }

  public String getMaximum() {
    return this.getProperty(RepeatTimes.MAXIMUM);
  }

  public void setMaximum(String value) {
    this.setProperty(RepeatTimes.MAXIMUM, value);
  }

  public int getMinimum() {
    return this.getIntegerProperty(RepeatTimes.MINIMUM);
  }

  public void setMinimum(int value) {
    this.setIntegerProperty(RepeatTimes.MINIMUM, value);
  }

  public int getMaximumInteger() {
    return this.getIntegerProperty(RepeatTimes.MAXIMUM_INTEGER);
  }

  public void setMaximumInteger(int value) {
    this.setIntegerProperty(RepeatTimes.MAXIMUM_INTEGER, value);
  }

  public static RepeatTimes newInstance(SModel sm, boolean init) {
    return (RepeatTimes) SModelUtil_new.instantiateConceptDeclaration("diglex.dsl.structure.RepeatTimes", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RepeatTimes newInstance(SModel sm) {
    return RepeatTimes.newInstance(sm, false);
  }
}
