package diglex.dsl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TemplateClass extends BaseConcept implements INamedConcept {
  public static final String concept = "diglex.dsl.structure.TemplateClass";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String BASE = "base";
  public static final String ID1 = "id1";
  public static final String PARENT_CLASS = "parentClass";
  public static final String TEMPLATE_CLASS_PROPERTY = "templateClassProperty";

  public TemplateClass(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(TemplateClass.NAME);
  }

  public void setName(String value) {
    this.setProperty(TemplateClass.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(TemplateClass.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(TemplateClass.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(TemplateClass.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(TemplateClass.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(TemplateClass.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(TemplateClass.VIRTUAL_PACKAGE, value);
  }

  public boolean getBase() {
    return this.getBooleanProperty(TemplateClass.BASE);
  }

  public void setBase(boolean value) {
    this.setBooleanProperty(TemplateClass.BASE, value);
  }

  public int getId1() {
    return this.getIntegerProperty(TemplateClass.ID1);
  }

  public void setId1(int value) {
    this.setIntegerProperty(TemplateClass.ID1, value);
  }

  public TemplateClass getParentClass() {
    return (TemplateClass) this.getReferent(TemplateClass.class, TemplateClass.PARENT_CLASS);
  }

  public void setParentClass(TemplateClass node) {
    super.setReferent(TemplateClass.PARENT_CLASS, node);
  }

  public int getTemplateClassPropertiesCount() {
    return this.getChildCount(TemplateClass.TEMPLATE_CLASS_PROPERTY);
  }

  public Iterator<TemplateClassProperty> templateClassProperties() {
    return this.children(TemplateClassProperty.class, TemplateClass.TEMPLATE_CLASS_PROPERTY);
  }

  public List<TemplateClassProperty> getTemplateClassProperties() {
    return this.getChildren(TemplateClassProperty.class, TemplateClass.TEMPLATE_CLASS_PROPERTY);
  }

  public void addTemplateClassProperty(TemplateClassProperty node) {
    this.addChild(TemplateClass.TEMPLATE_CLASS_PROPERTY, node);
  }

  public void insertTemplateClassProperty(TemplateClassProperty prev, TemplateClassProperty node) {
    this.insertChild(prev, TemplateClass.TEMPLATE_CLASS_PROPERTY, node);
  }

  public static TemplateClass newInstance(SModel sm, boolean init) {
    return (TemplateClass) SModelUtil_new.instantiateConceptDeclaration("diglex.dsl.structure.TemplateClass", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TemplateClass newInstance(SModel sm) {
    return TemplateClass.newInstance(sm, false);
  }
}
