package diglex.dsl.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum ClassPropertyDatatype {
  Строка("\u0421\u0442\u0440\u043e\u043a\u0430", "string"),
  Целое("\u0426\u0435\u043b\u043e\u0435", "int"),
  Булево("\u0411\u0443\u043b\u0435\u0432\u043e", "boolean"),
  Вещественное("\u0412\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435", "float");

  private String myName;
  private String myValue;

  ClassPropertyDatatype(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

  public static List<ClassPropertyDatatype> getConstants() {
    List<ClassPropertyDatatype> list = ListSequence.fromList(new LinkedList<ClassPropertyDatatype>());
    ListSequence.fromList(list).addElement(ClassPropertyDatatype.Строка);
    ListSequence.fromList(list).addElement(ClassPropertyDatatype.Целое);
    ListSequence.fromList(list).addElement(ClassPropertyDatatype.Булево);
    ListSequence.fromList(list).addElement(ClassPropertyDatatype.Вещественное);
    return list;
  }

  public static ClassPropertyDatatype getDefault() {
    return ClassPropertyDatatype.Строка;
  }

  public static ClassPropertyDatatype parseValue(String value) {
    if (value == null) {
      return ClassPropertyDatatype.getDefault();
    }
    if (value.equals(ClassPropertyDatatype.Строка.getValueAsString())) {
      return ClassPropertyDatatype.Строка;
    }
    if (value.equals(ClassPropertyDatatype.Целое.getValueAsString())) {
      return ClassPropertyDatatype.Целое;
    }
    if (value.equals(ClassPropertyDatatype.Булево.getValueAsString())) {
      return ClassPropertyDatatype.Булево;
    }
    if (value.equals(ClassPropertyDatatype.Вещественное.getValueAsString())) {
      return ClassPropertyDatatype.Вещественное;
    }
    return ClassPropertyDatatype.getDefault();
  }
}
