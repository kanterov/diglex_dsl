package diglex.dsl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StringSet extends BaseConcept implements IBlockItem {
  public static final String concept = "diglex.dsl.structure.StringSet";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String LEXEM_TYPE = "lexemType";
  public static final String ITEMS = "Items";

  public StringSet(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(StringSet.NAME);
  }

  public void setName(String value) {
    this.setProperty(StringSet.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(StringSet.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(StringSet.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(StringSet.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(StringSet.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(StringSet.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(StringSet.VIRTUAL_PACKAGE, value);
  }

  public LexemType getLexemType() {
    return (LexemType) this.getReferent(LexemType.class, StringSet.LEXEM_TYPE);
  }

  public void setLexemType(LexemType node) {
    super.setReferent(StringSet.LEXEM_TYPE, node);
  }

  public int getItemsesCount() {
    return this.getChildCount(StringSet.ITEMS);
  }

  public Iterator<StringSetItem> Itemses() {
    return this.children(StringSetItem.class, StringSet.ITEMS);
  }

  public List<StringSetItem> getItemses() {
    return this.getChildren(StringSetItem.class, StringSet.ITEMS);
  }

  public void addItems(StringSetItem node) {
    this.addChild(StringSet.ITEMS, node);
  }

  public void insertItems(StringSetItem prev, StringSetItem node) {
    this.insertChild(prev, StringSet.ITEMS, node);
  }

  public static StringSet newInstance(SModel sm, boolean init) {
    return (StringSet) SModelUtil_new.instantiateConceptDeclaration("diglex.dsl.structure.StringSet", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StringSet newInstance(SModel sm) {
    return StringSet.newInstance(sm, false);
  }
}
