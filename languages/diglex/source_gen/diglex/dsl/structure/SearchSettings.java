package diglex.dsl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SearchSettings extends BaseConcept implements INamedConcept {
  public static final String concept = "diglex.dsl.structure.SearchSettings";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String LEXEM = "lexem";

  public SearchSettings(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(SearchSettings.NAME);
  }

  public void setName(String value) {
    this.setProperty(SearchSettings.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(SearchSettings.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(SearchSettings.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(SearchSettings.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(SearchSettings.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(SearchSettings.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(SearchSettings.VIRTUAL_PACKAGE, value);
  }

  public LexemClassification getLexem() {
    return (LexemClassification) this.getReferent(LexemClassification.class, SearchSettings.LEXEM);
  }

  public void setLexem(LexemClassification node) {
    super.setReferent(SearchSettings.LEXEM, node);
  }

  public static SearchSettings newInstance(SModel sm, boolean init) {
    return (SearchSettings) SModelUtil_new.instantiateConceptDeclaration("diglex.dsl.structure.SearchSettings", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SearchSettings newInstance(SModel sm) {
    return SearchSettings.newInstance(sm, false);
  }
}
