package diglex.dsl.generator.template.main;

/*Generated by MPS */

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.DropRootRuleContext;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import diglex.dsl.utils.ClassPropertyDatatypeUtil;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.Set;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class QueriesGenerated {
  protected static Log log = LogFactory.getLog(QueriesGenerated.class);

  public static boolean dropRootRule_Condition_7804553196909786329(final IOperationContext operationContext, final DropRootRuleContext _context) {
    return true;
  }

  public static Object propertyMacro_GetPropertyValue_7612397494931112921(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(_context.getNode(), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_7612397494931113030(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (SNodeOperations.isInstanceOf(_context.getNode(), "diglex.dsl.structure.DistantContext")) {
      return "DistantContext";
    }
    if (SNodeOperations.isInstanceOf(_context.getNode(), "diglex.dsl.structure.Block")) {
      return "Block";
    }
    if (SNodeOperations.isInstanceOf(_context.getNode(), "diglex.dsl.structure.TemplateReference")) {
      return "TemplateReference";
    }
    if (SNodeOperations.isInstanceOf(_context.getNode(), "diglex.dsl.structure.AnonymousTemplate")) {
      return "AnonymousTemplateItem";
    }
    return "Unknown";
  }

  public static Object propertyMacro_GetPropertyValue_7612397494931118281(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(_context.getNode(), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_7096421670146225558(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "TemplateReference", false), "id1"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547775974(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "Tail", true), "maximumLengthInteger"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547776680(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "Tail", true), "minimumLength"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547748625(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(_context.getNode(), "CaseSensitive"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547748663(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "lexemType", false), "bulk");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547747974(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "Repeat", true), "minimum"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547747990(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "Repeat", true), "maximumInteger"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547748702(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(_context.getNode()), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751503(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), "timesMinimum"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751479(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), "timesMaximumInteger"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751578(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "Value");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751554(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "lexemType", false), "bulk");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751611(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "Value");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751660(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "TemplateReference", false), "id1"));
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872857147(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), "id1"));
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872857115(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "templateClass", false), "id1"));
  }

  public static Object propertyMacro_GetPropertyValue_8770772348876348416(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString_def(_context.getNode(), "MatchMode", "AbsoluteMeaningful");
  }

  public static Object propertyMacro_GetPropertyValue_8760462257934387173(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8760462257934387201(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_8760462257934387235(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_8760462257934387376(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_6970827918925078881(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_6970827918925078915(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872669474(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), "id1"));
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872865752(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872669515(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "parentClass", false), "id1"));
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872857197(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872857212(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ClassPropertyDatatypeUtil.getXmlStringRepresentation(SPropertyOperations.getString_def(_context.getNode(), "type", "string"));
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872857183(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "value");
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872857408(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872857353(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ClassPropertyDatatypeUtil.getXmlStringRepresentation(SPropertyOperations.getString(_context.getNode(), "value"));
  }

  public static Object propertyMacro_GetPropertyValue_8627407948872857341(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "value");
  }

  public static boolean ifMacro_Condition_1094196415547748599(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Tail", true) != null);
  }

  public static boolean ifMacro_Condition_8760462257934387190(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Precondition", true) != null);
  }

  public static boolean ifMacro_Condition_8760462257934387224(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Postcondition", true) != null);
  }

  public static boolean ifMacro_Condition_6970827918925078870(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Precondition", true) != null);
  }

  public static boolean ifMacro_Condition_6970827918925078904(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Postcondition", true) != null);
  }

  public static boolean ifMacro_Condition_8627407948872669498(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "parentClass", false) != null);
  }

  public static Iterable sourceNodesQuery_7612397494931112975(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static Iterable sourceNodesQuery_7096421670146200316(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Conditions", true);
  }

  public static Iterable sourceNodesQuery_1094196415547748682(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static Iterable sourceNodesQuery_1094196415547751598(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static Iterable sourceNodesQuery_8627407948872857159(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "classProperty", true);
  }

  public static Iterable sourceNodesQuery_8760462257934387182(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "MatchCases", true);
  }

  public static Iterable sourceNodesQuery_8760462257934387213(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "Items", true);
  }

  public static Iterable sourceNodesQuery_8760462257934387247(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "Postcondition", true), "Items", true);
  }

  public static Iterable sourceNodesQuery_8760462257934387259(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static Iterable sourceNodesQuery_8627407948872668627(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    final Set<SNode> templateClasses = SetSequence.fromSet(new HashSet<SNode>());
    final Wrappers._T<SNode> baseTemplateClass = new Wrappers._T<SNode>();

    ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(_context.getNode()), "diglex.dsl.structure.TemplateClass")).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        if (SPropertyOperations.getBoolean(it, "base")) {
          baseTemplateClass.value = it;
        }
      }
    });

    if ((baseTemplateClass.value != null)) {
      SetSequence.fromSet(templateClasses).addElement(baseTemplateClass.value);
    } else {
    }

    ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "dictionaryTemplate", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, "template", false) != null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, "template", false);
      }
    }).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        if ((SNodeOperations.getParent(it) != null)) {
          SetSequence.fromSet(templateClasses).addElement(SLinkOperations.getTarget(it, "templateClass", false));
        }
      }
    });

    ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "dictionaryClass", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, "templateClass", false) != null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, "templateClass", false);
      }
    }).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {

        SetSequence.fromSet(templateClasses).addElement(it);
      }
    });

    return SetSequence.fromSet(templateClasses).toListSequence();
  }

  public static Iterable sourceNodesQuery_8627407948872668610(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "dictionaryTemplate", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, "template", false) != null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, "template", false);
      }
    });
  }

  public static Iterable sourceNodesQuery_6970827918925078862(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "matchCase", true);
  }

  public static Iterable sourceNodesQuery_6970827918925078893(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "Items", true);
  }

  public static Iterable sourceNodesQuery_6970827918925078927(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "Postcondition", true), "Items", true);
  }

  public static Iterable sourceNodesQuery_6970827918925078939(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static Iterable sourceNodesQuery_8627407948872857424(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "templateClassProperty", true);
  }

  public static void mappingScript_CodeBlock_8760462257934526332(final IOperationContext operationContext, final MappingScriptContext _context) {
    if (log.isInfoEnabled()) {
      log.info("\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u044e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u0434\u043b\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432");
    }

    int id = 1;
    for (SNode node : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "diglex.dsl.structure.Template"))) {
      SPropertyOperations.set(node, "id1", "" + id);
      id++;
    }
  }

  public static void mappingScript_CodeBlock_8627407948872681938(final IOperationContext operationContext, final MappingScriptContext _context) {
    final Wrappers._T<SNode> baseClass = new Wrappers._T<SNode>(null);

    ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "diglex.dsl.structure.TemplateClass")).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {

        if (SPropertyOperations.getBoolean(it, "base")) {
          baseClass.value = it;
        }
      }
    });

    if ((baseClass.value == null)) {
      baseClass.value = SConceptOperations.createNewNode("diglex.dsl.structure.TemplateClass", null);
      SPropertyOperations.set(baseClass.value, "name", "\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441");
      SPropertyOperations.set(baseClass.value, "base", "" + true);
      SPropertyOperations.set(baseClass.value, "id1", "" + 0);

      SModelOperations.addRootNode(_context.getModel(), baseClass.value);
    }

    ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "diglex.dsl.structure.TemplateClass")).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {

        if ((SLinkOperations.getTarget(it, "parentClass", false) == null) && !(SPropertyOperations.getBoolean(it, "base"))) {
          SLinkOperations.setTarget(it, "parentClass", baseClass.value, false);
        }
      }
    });

    ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "diglex.dsl.structure.Template")).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {

        if ((SLinkOperations.getTarget(it, "templateClass", false) == null)) {
          SLinkOperations.setTarget(it, "templateClass", baseClass.value, false);
        }
      }
    });
  }

  public static void mappingScript_CodeBlock_8627407948872682167(final IOperationContext operationContext, final MappingScriptContext _context) {
    final Wrappers._int id = new Wrappers._int(1000000000);

    if (log.isInfoEnabled()) {
      log.info("give itds to templates generator");
    }

    ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "diglex.dsl.structure.TemplateClass")).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        if (log.isInfoEnabled()) {
          log.info("parsing class: " + SPropertyOperations.getString(it, "name"));
        }

        if (SPropertyOperations.getBoolean(it, "base")) {
          SPropertyOperations.set(it, "id1", "" + 0);
        } else {
          SPropertyOperations.set(it, "id1", "" + id.value);
          id.value++;
        }
      }
    });
  }

  public static void mappingScript_CodeBlock_8627407948872875835(final IOperationContext operationContext, final MappingScriptContext _context) {

    ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "diglex.dsl.structure.Dictionary")).visitAll(new IVisitor<SNode>() {
      public void visit(final SNode dict) {
        final Set<SNode> templateClasses = SetSequence.fromSetWithValues(new HashSet<SNode>(), ListSequence.fromList(SLinkOperations.getTargets(dict, "dictionaryClass", true)).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return (SLinkOperations.getTarget(it, "templateClass", false) != null);
          }
        }).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            return SLinkOperations.getTarget(it, "templateClass", false);
          }
        }));
        int size = SetSequence.fromSet(templateClasses).count();

        while (true) {
          ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "diglex.dsl.structure.TemplateClass")).visitAll(new IVisitor<SNode>() {
            public void visit(SNode it) {

              if (SetSequence.fromSet(templateClasses).contains(SLinkOperations.getTarget(it, "parentClass", false))) {
                SetSequence.fromSet(templateClasses).addElement(it);
              }
            }
          });

          if (size == SetSequence.fromSet(templateClasses).count()) {
            break;
          }

          size = SetSequence.fromSet(templateClasses).count();
        }

        ListSequence.fromList(SLinkOperations.getTargets(dict, "dictionaryClass", true)).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return (SLinkOperations.getTarget(it, "templateClass", false) != null);
          }
        }).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            return SLinkOperations.getTarget(it, "templateClass", false);
          }
        }).visitAll(new IVisitor<SNode>() {
          public void visit(SNode it) {
            if (SetSequence.fromSet(templateClasses).contains(it)) {
              SetSequence.fromSet(templateClasses).removeElement(it);
            }
          }
        });

        SetSequence.fromSet(templateClasses).visitAll(new IVisitor<SNode>() {
          public void visit(SNode it) {
            SNode dictionaryClass = SConceptOperations.createNewNode("diglex.dsl.structure.DictionaryClass", null);
            SLinkOperations.setTarget(dictionaryClass, "templateClass", it, false);

            ListSequence.fromList(SLinkOperations.getTargets(dict, "dictionaryClass", true)).addElement(dictionaryClass);
          }
        });
      }
    });

  }

  public static void mappingScript_CodeBlock_8627407948872876234(final IOperationContext operationContext, final MappingScriptContext _context) {
    ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "diglex.dsl.structure.Dictionary")).visitAll(new IVisitor<SNode>() {
      public void visit(final SNode dictionary) {
        final Set<SNode> dictionaryTemplates = SetSequence.fromSet(new HashSet<SNode>());
        final Set<SNode> dictionaryClasses = SetSequence.fromSet(new HashSet<SNode>());

        ListSequence.fromList(SLinkOperations.getTargets(dictionary, "dictionaryTemplate", true)).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return (SLinkOperations.getTarget(it, "template", false) != null);
          }
        }).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            return SLinkOperations.getTarget(it, "template", false);
          }
        }).visitAll(new IVisitor<SNode>() {
          public void visit(SNode it) {
            SetSequence.fromSet(dictionaryTemplates).addElement(it);
          }
        });
        ListSequence.fromList(SLinkOperations.getTargets(dictionary, "dictionaryClass", true)).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return (SLinkOperations.getTarget(it, "templateClass", false) != null);
          }
        }).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            return SLinkOperations.getTarget(it, "templateClass", false);
          }
        }).visitAll(new IVisitor<SNode>() {
          public void visit(SNode it) {
            SetSequence.fromSet(dictionaryClasses).addElement(it);
          }
        });

        ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "diglex.dsl.structure.Template")).visitAll(new IVisitor<SNode>() {
          public void visit(SNode it) {
            if (SetSequence.fromSet(dictionaryClasses).contains(SLinkOperations.getTarget(it, "templateClass", false))) {
              if (!(SetSequence.fromSet(dictionaryTemplates).contains(it))) {
                SNode dictionaryTemplate = SConceptOperations.createNewNode("diglex.dsl.structure.DictionaryTemplate", null);
                SLinkOperations.setTarget(dictionaryTemplate, "template", it, false);

                ListSequence.fromList(SLinkOperations.getTargets(dictionary, "dictionaryTemplate", true)).addElement(dictionaryTemplate);
                SetSequence.fromSet(dictionaryTemplates).addElement(it);
              }
            }
          }
        });
      }
    });
  }
}
