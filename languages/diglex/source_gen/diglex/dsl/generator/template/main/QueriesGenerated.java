package diglex.dsl.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.DropRootRuleContext;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;

public class QueriesGenerated {
  public static boolean dropRootRule_Condition_7804553196909786329(final IOperationContext operationContext, final DropRootRuleContext _context) {
    return true;
  }

  public static Object propertyMacro_GetPropertyValue_7612397494931112921(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(_context.getNode(), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_7612397494931113030(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (SNodeOperations.isInstanceOf(_context.getNode(), "diglex.dsl.structure.DistantContext")) {
      return "DistantContext";
    }
    if (SNodeOperations.isInstanceOf(_context.getNode(), "diglex.dsl.structure.Block")) {
      return "Block";
    }
    if (SNodeOperations.isInstanceOf(_context.getNode(), "diglex.dsl.structure.TemplateReference")) {
      return "TemplateReference";
    }
    if (SNodeOperations.isInstanceOf(_context.getNode(), "diglex.dsl.structure.AnonymousTemplate")) {
      return "AnonymousTemplateItem";
    }
    return "Unknown";
  }

  public static Object propertyMacro_GetPropertyValue_7612397494931118281(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(_context.getNode(), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_7096421670146225558(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "TemplateReference", false), "id1"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547775974(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "Tail", true), "maximumLengthInteger"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547776680(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "Tail", true), "minimumLength"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547748625(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(_context.getNode(), "CaseSensitive"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547748663(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "lexemType", false), "bulk");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547747974(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "Repeat", true), "minimum"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547747990(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "Repeat", true), "maximumInteger"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547748702(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(_context.getNode()), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751503(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), "timesMinimum"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751479(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), "timesMaximumInteger"));
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751578(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "Value");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751554(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "lexemType", false), "bulk");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751611(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "Value");
  }

  public static Object propertyMacro_GetPropertyValue_1094196415547751660(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), "TemplateReference", false), "id1"));
  }

  public static Object propertyMacro_GetPropertyValue_8760462257934387163(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), "id1"));
  }

  public static Object propertyMacro_GetPropertyValue_8770772348876348416(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString_def(_context.getNode(), "MatchMode", "AbsoluteMeaningful");
  }

  public static Object propertyMacro_GetPropertyValue_8760462257934387173(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8760462257934387201(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_8760462257934387235(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_8760462257934387376(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_6970827918925078881(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "NotInclude"));
  }

  public static Object propertyMacro_GetPropertyValue_6970827918925078915(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "NotInclude"));
  }

  public static boolean ifMacro_Condition_1094196415547748599(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Tail", true) != null);
  }

  public static boolean ifMacro_Condition_8760462257934387190(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Precondition", true) != null);
  }

  public static boolean ifMacro_Condition_8760462257934387224(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Postcondition", true) != null);
  }

  public static boolean ifMacro_Condition_6970827918925078870(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Precondition", true) != null);
  }

  public static boolean ifMacro_Condition_6970827918925078904(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "Postcondition", true) != null);
  }

  public static Iterable sourceNodesQuery_7612397494931112975(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static Iterable sourceNodesQuery_7096421670146200316(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Conditions", true);
  }

  public static Iterable sourceNodesQuery_1094196415547748682(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static Iterable sourceNodesQuery_1094196415547751598(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static Iterable sourceNodesQuery_8760462257934387182(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "MatchCases", true);
  }

  public static Iterable sourceNodesQuery_8760462257934387213(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "Items", true);
  }

  public static Iterable sourceNodesQuery_8760462257934387247(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "Postcondition", true), "Items", true);
  }

  public static Iterable sourceNodesQuery_8760462257934387259(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static Iterable sourceNodesQuery_8760462257934520890(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "dictionaryTemplate", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, "template", false) != null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, "template", false);
      }
    });
  }

  public static Iterable sourceNodesQuery_6970827918925078862(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "matchCase", true);
  }

  public static Iterable sourceNodesQuery_6970827918925078893(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "Precondition", true), "Items", true);
  }

  public static Iterable sourceNodesQuery_6970827918925078927(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "Postcondition", true), "Items", true);
  }

  public static Iterable sourceNodesQuery_6970827918925078939(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "Items", true);
  }

  public static void mappingScript_CodeBlock_8760462257934526332(final IOperationContext operationContext, final MappingScriptContext _context) {
    int id = 0;
    for (SNode node : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "diglex.dsl.structure.Template"))) {
      SPropertyOperations.set(node, "id1", "" + id);
      id++;
    }
  }
}
