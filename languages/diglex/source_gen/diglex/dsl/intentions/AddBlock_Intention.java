package diglex.dsl.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class AddBlock_Intention extends BaseIntention implements Intention {
  public AddBlock_Intention() {
  }

  public String getConcept() {
    return "diglex.dsl.structure.MatchCase";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0411\u043b\u043e\u043a";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode block = SConceptOperations.createNewNode("diglex.dsl.structure.Block", null);
    SNode exactString = SConceptOperations.createNewNode("diglex.dsl.structure.ExactString", null);

    ListSequence.fromList(SLinkOperations.getTargets(block, "Items", true)).clear();
    ListSequence.fromList(SLinkOperations.getTargets(block, "Items", true)).addElement(exactString);

    ListSequence.fromList(SLinkOperations.getTargets(node, "Items", true)).addElement(block);
  }

  public String getLocationString() {
    return "diglex.dsl.intentions";
  }
}
